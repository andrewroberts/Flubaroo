// File: view_report.gas
// Description: 
// This file contains all relevant functions for displaying and emailing
// the report. Note that the URL for the histogram chart is generated by  
// formHistorgramURL(), and is located in 'grading.gas'.


// viewReport: Displays the UI for grading report.
 function viewReport()
 {
   var ss = SpreadsheetApp.getActiveSpreadsheet();
  
   var grades_sheet = getSheetWithGrades(ss);  
   if (grades_sheet === null)
     {
       Browser.msgBox(langstr("FLB_STR_NOTIFICATION"),
                      langstr("FLB_STR_CANNOT_FIND_GRADES_MSG") + langstr("FLB_STR_SHEETNAME_GRADES"),
                      Browser.Buttons.OK);
       return;
     }
 
   var app = createReportUI(ss, grades_sheet);
   ss.show(app);   
 }
 
 function createReportUI(ss, grades_sheet)
 {
   var app = UiApp.createApplication().setTitle(langstr("FLB_STR_VIEW_REPORT_WINDOW_TITLE"))
                                      .setWidth("680").setHeight("490");
     
   var gws = new GradesWorksheet(ss, INIT_TYPE_GRADED_META);
   var points_possible = gws.getPointsPossible();  
   var avg_subm_score = gws.getAverageScore();
   var num_subm = gws.getNumGradedSubmissions();
   
   var title = ss.getName();
   
   var chart_url = ScriptProperties.getProperty(SCRIPT_PROP_HISTOGRAM_URL);
  
   // Declare the handler that will be called when the 'Continue' or 'Cancel'
   // buttons are clicked.
   var handler = app.createServerClickHandler('emailReportHandler');
   
   var email_addr = Session.getActiveUser().getEmail();
   var email_addr_field = app.createHidden("email_addr", email_addr)
                                .setId("email_addr").setName("email_addr");
                                  
   var hidden_vars = app.createVerticalPanel().setVisible(false);
   hidden_vars.add(email_addr_field);
   handler.addCallbackElement(email_addr_field);
   
   // create the main panel to hold all content in the UI.
   var main_panel = app.createVerticalPanel()
                       .setStyleAttribute('border-spacing', '10px');
         
   var grid = app.createGrid(4,1).setCellSpacing(5);
   
   grid.setWidget(0, 0, app.createLabel(langstr("FLB_STR_GRADE_SUMMARY_TEXT_REPORT_FOR") + ': ' + title)
                              .setStyleAttribute('textDecoration','underline'));
   grid.setWidget(1, 0, app.createLabel(langstr("FLB_STR_GRADE_SUMMARY_TEXT_POINTS_POSSIBLE") + ': ' + points_possible));
   grid.setWidget(2, 0, app.createLabel(langstr("FLB_STR_GRADE_SUMMARY_TEXT_AVERAGE_POINTS") +  ': ' + avg_subm_score));
   grid.setWidget(3, 0, app.createLabel(langstr("FLB_STR_GRADE_SUMMARY_TEXT_COUNTED_SUBMISSIONS") +  ': ' + num_subm));
   
   // add a top level hpanel for instructions and picture
   var hpanel = app.createHorizontalPanel()
       .setStyleAttribute('border-spacing', '10px')
       .add(app.createImage(chart_url));
   
   main_panel.add(grid);
   main_panel.add(hpanel);
        
    // add the Continue and Cancel buttons at the bottom.
   var btnGrid = app.createGrid(1, 1).setStyleAttribute('float', 'right');
   var btnSubmit = app.createButton(langstr("FLB_STR_VIEW_REPORT_BUTTON_EMAIL_ME"),handler)
                      .setId('EMAIL')
   
   btnGrid.setWidget(0,0,btnSubmit);
   main_panel.add(btnGrid);
   main_panel.add(hidden_vars);
   
   app.add(main_panel);
       
   return app;
 }
 
 function emailReportHandler(e)
 {
   var app = UiApp.getActiveApplication();
   var ss = SpreadsheetApp.getActiveSpreadsheet(); 
   var gws = new GradesWorksheet(ss, INIT_TYPE_GRADED_META);
   var points_possible = gws.getPointsPossible();  
   var avg_subm_score = gws.getAverageScore();
   var num_subm = gws.getNumGradedSubmissions();   
   var title = ss.getName();
   var chart_url = ScriptProperties.getProperty(SCRIPT_PROP_HISTOGRAM_URL);
   var title = ss.getName();
   var email_address = e.parameter.email_addr;
   var msg_title = langstr("FLB_STR_GRADE_SUMMARY_TEXT_REPORT_FOR") + ": " + title;
 
   // form the html to email
   var html_body = '<html><body bgcolor="white">';
   html_body += '<p><b>' + langstr("FLB_STR_GRADE_SUMMARY_TEXT_REPORT_FOR") + ': <a href="' + ss.getUrl() + '">' + title + '</a></b>';
   html_body += '</p>';
   html_body += '<table border=0 cellspacing=2>';
   html_body += '<tr><td>' + langstr("FLB_STR_GRADE_SUMMARY_TEXT_POINTS_POSSIBLE") + ':</td><td>' + points_possible + '</td></tr>';
   html_body += '<tr><td>' + langstr("FLB_STR_GRADE_SUMMARY_TEXT_AVERAGE_POINTS") + ':</td><td>' + avg_subm_score + '</td></tr>';
   html_body += '<tr><td>' + langstr("FLB_STR_GRADE_SUMMARY_TEXT_COUNTED_SUBMISSIONS") + ':</td><td>' + num_subm + '</td></tr>';
   html_body += '</table><br>';
   
   html_body += '<img src="' + chart_url + '">';
       
   html_body += '</body></html>';
   
   //email_address = Session.getActiveUser().getEmail();
   try
     {
     
       // TODO_AJR - Everywhere else emailing can be disabled in debug mode.
     
       MailApp.sendEmail(email_address, msg_title, "",
                                 {htmlBody: html_body, noReply: true, name: "Assignment Grader"});
          
       Browser.msgBox(langstr("FLB_STR_NOTIFICATION"),
                  langstr("FLB_STR_VIEW_REPORT_EMAIL_NOTIFICATION") + ': ' + email_address,
                  Browser.Buttons.OK);
     }
   catch(exception)
     {
       Debug.error("emailReportHandler() - failed to email report - " +
              exception);
     }
   
   return;
 }
 